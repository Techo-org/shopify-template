{% schema %}
{
  "name": "Product Carousel",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    }
  ]
}
{% endschema %}

{% style %}
  .carousel-container {
    position: relative;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 60px 0;
    overflow: hidden;
  }
  .carousel-item::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
    background-image:
      linear-gradient(
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0) 50%,
        rgba(255, 255, 255, 0.02) 50%,
        rgba(255, 255, 255, 0.02) 100%
      ),
      linear-gradient(
        90deg,
        rgba(255, 255, 255, 0.05) 0%,
        rgba(255, 255, 255, 0.05) 50%,
        rgba(255, 255, 255, 0) 50%,
        rgba(255, 255, 255, 0) 100%
      );
    background-size: 5px 5px, 5px 5px;
    z-index: 3;
  }

  .carousel-item:hover::after {
    opacity: 1;
  }
  .carousel {
    display: flex;
    align-items: center;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    gap: 30px;
    padding: 20px 40px;
  }

  .carousel-item {
      flex: 0 0 280px;
      height: 350px;
      position: relative;
      cursor: pointer;
      display:flex;
      background: #1f1f1f;
      border: 2px solid transparent;
      border-radius: 10px;
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      transform-origin: center;
      justify-content: center;
      align-items: center;
      color: white;
      font-family: Arial, sans-serif;
      font-size: 18px;
      overflow: hidden;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Default shadow */
  }

  .carousel-item:hover {
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.5); /* Increased shadow on hover */
  }

  .carousel-item:hover::before,
  .carousel-item:hover::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border: 2px solid white;
    box-shadow: inset 0 0 20px rgba(255, 255, 255, 0.5);
    border-radius: 10px;
    animation: border-sequence 2s linear infinite;
  }

  @keyframes border-sequence {
    0% {
      border-top-color: white;
      border-right-color: transparent;
      border-bottom-color: transparent;
      border-left-color: transparent;
    }
    25% {
      border-top-color: white;
      border-right-color: white;
      border-bottom-color: transparent;
      border-left-color: transparent;
    }
    50% {
      border-top-color: transparent;
      border-right-color: white;
      border-bottom-color: white;
      border-left-color: transparent;
    }
    75% {
      border-top-color: transparent;
      border-right-color: transparent;
      border-bottom-color: white;
      border-left-color: white;
    }
    100% {
      border-top-color: white;
      border-right-color: transparent;
      border-bottom-color: transparent;
      border-left-color: white;
    }
  }

  .carousel-item-inner {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    border-radius: 12px;
  }

  .carousel-item:hover .carousel-item-inner::before {
    animation: shine 2s ease-in-out infinite;
    opacity: 1;
  }
  .carousel-item:not(:hover) .carousel-item-inner::before {
    opacity: 0;
    animation: none;
  }
    .carousel-item-inner::before {
    display: none;
  }

  .carousel-item:hover .carousel-item-inner::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 300%;
    height: 200%;
    background: linear-gradient(
      90deg,
      transparent 10%,
      rgba(255,255,255,0) 20%,
      rgba(255,255,255,0.9) 25%,
      transparent 30%,
      transparent 35%,
      rgba(255,255,255,0.9) 40%,
      transparent 45%,
      transparent 50%,
      rgba(255,255,255,0.9) 55%,
      transparent 60%
    );
    transform: skew(-45deg);
    z-index: 10;
    animation: shine 4s ease-in-out infinite;
    opacity: 1;
    display: block;
  }
  @keyframes shine {
    0% {
      transform: translate(-100%, -100%) skew(-45deg);
    }
    100% {
      transform: translate(100%, 100%) skew(-45deg);
    }
  }

  .carousel-item.active {
    flex: 0 0 350px;
    height: 420px;
  }

  .carousel-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  .carousel-item:hover .carousel-image {
      transform: scale(1.15) rotate(-6deg);
  }

  @keyframes grain {
    0%, 100% {transform: translate(0,0);}
    10% {transform: translate(-5%,-10%);}
    30% {transform: translate(3%,-15%);}
    50% {transform: translate(7%,-11%);}
    70% {transform: translate(12%,9%);}
    90% {transform: translate(-2%,7%);}
  }

  .carousel-text {
      position: absolute;
      bottom: 30px;
      left: 30px;
      color: white;
      transform: translateY(100px) translateX(-50px) ;
      transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
      z-index: 2;
    }

    .carousel-item:hover .carousel-text {
      transform: translateY(0) translateX(0) ;
    }

    .carousel-text h3 {
      font-size: 24px;
      font-weight: 600;
      margin: 0;
      color:white;
      line-height: 1.2;
    }

  .carousel-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 50px;
    height: 50px;
    background: white;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    z-index: 2;
    transition: all 0.3s ease;
  }

  .carousel-nav:hover {
    background: #f8f8f8;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
  }

  .carousel-prev {
    left: 20px;
  }

  .carousel-next {
    right: 20px;
  }
  .carousel-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 30px 15px;
    overflow: hidden;
  }

  .carousel {
    display: flex;
    align-items: center;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    gap: 15px;
    padding: 10px;
  }
  .carousel-page-text {
     position: absolute;
      bottom: 27px;
      right: 30px;
      color: white;
      transform: translateY(100px) translateX(50px);
      transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
      z-index: 2;
  }

  .carousel-item:hover .carousel-page-text {
     transform:translateY(0) translateX(0);
  }
  .carousel-item {
    flex: 0 0 200px;
    height: 250px;
    min-width: 180px;
  }

  .carousel-item.active {
    flex: 0 0 250px;
    height: 320px;
  }

  @media (min-width: 768px) {
    .carousel-item {
      flex: 0 0 280px;
      height: 350px;
    }

    .carousel-item.active {
      flex: 0 0 350px;
      height: 420px;
    }
  }

  @media (max-width: 480px) {
    .carousel-nav {
      width: 40px;
      height: 40px;
    }

    .carousel-prev {
      left: 10px;
    }

    .carousel-next {
      right: 10px;
    }
  }
{% endstyle %}

<div class="carousel-container">
  <div class="carousel" id="productCarousel">
    {% for product in collections[section.settings.collection].products %}
      <div class="carousel-item {% if forloop.index == 3 %}active{% endif %}" data-index="{{ forloop.index0 }}">
        <div class="carousel-item-inner">
          <img
            src="{{ product.featured_image | img_url: '800x' }}"
            alt="{{ product.title }}"
            class="carousel-image"
            loading="lazy"
          >
          <div class="carousel-text">
            <h3>{{ product.title }}</h3>
          </div>
          <div class="carousel-page-text">
            <span style="font-size: 20px;">&#8594;</span>
            <!-- Simple arrow -->
          </div>
        </div>
      </div>
    {% endfor %}
  </div>

  <button class="carousel-nav carousel-prev" aria-label="Previous">&lt;</button>
  <button class="carousel-nav carousel-next" aria-label="Next">&gt;</button>
</div>

{% javascript %}
class Carousel {
  constructor() {
    this.carousel = document.getElementById('productCarousel');
    this.items = Array.from(this.carousel.getElementsByClassName('carousel-item'));
    this.prevBtn = document.querySelector('.carousel-prev');
    this.nextBtn = document.querySelector('.carousel-next');
    this.currentIndex = 2; // Start with middle item active
    this.itemWidth = 280; // Default item width
    this.activeItemWidth = 350; // Width of active item
   
    this.init();
    this.centerActiveItem();
  }
 
  init() {
    this.prevBtn.addEventListener('click', () => this.move('prev'));
    this.nextBtn.addEventListener('click', () => this.move('next'));
   
    this.items.forEach((item, index) => {
      item.addEventListener('click', () => this.setActive(index));
    });

    // Initial positioning
    this.centerActiveItem();
   
    // Recalculate on window resize
    window.addEventListener('resize', () => this.centerActiveItem());
  }
 
  setActive(index) {
    if (index === this.currentIndex) return;
   
    // Remove active class from current item
    this.items[this.currentIndex].classList.remove('active');
   
    // Add active class to new item
    this.items[index].classList.add('active');
   
    // Update current index
    this.currentIndex = index;
   
    // Center the active item
    this.centerActiveItem();
  }
 
  centerActiveItem() {
    const containerWidth = this.carousel.parentElement.offsetWidth;
    const activeItem = this.items[this.currentIndex];
    const activeItemRect = activeItem.getBoundingClientRect();
    const carouselRect = this.carousel.getBoundingClientRect();
   
    // Calculate the offset needed to center the active item
    const itemOffset = activeItem.offsetLeft;
    const scrollPosition = itemOffset - (containerWidth / 2) + (activeItemRect.width / 2);
   
    // Apply the transform with smooth transition
    this.carousel.style.transform = `translateX(-${scrollPosition}px)`;
  }
 
  move(direction) {
    const newIndex = direction === 'next'
      ? Math.min(this.currentIndex + 1, this.items.length - 1)
      : Math.max(this.currentIndex - 1, 0);
     
    this.setActive(newIndex);
  }
}
// Initialize carousel when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
  new Carousel();
});
{% endjavascript %}
